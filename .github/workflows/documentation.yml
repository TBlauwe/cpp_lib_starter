# Simple workflow for deploying static content to GitHub Pages
name:  Build and deploy documentation

on:
  workflow_run:
    workflows: [CI Ubuntu & MacOS]
    types: [completed]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  CPM_SOURCE_CACHE: ./.cpm_cache

jobs:
  deploy:
    # Only run this when:
    # - CI on macOS and Ubuntu worked OR if it was triggered manually
    # - AND if we are on master branch.
    if: ${{ (github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Update'
        run: |
          sudo apt-add-repository universe
          sudo apt-get update

      - name: 'Install Doxygen'
        uses: ssciwr/doxygen-install@v1

      - name: 'Install Doxygen dependencies'
        run: sudo apt-get install graphviz

      - name: Build
        id: build
        uses: './.github/actions/build'
        with:
          architecture: x64
          toolchain: clang
          configuration: release
          target: TCM_Documentation

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.build.outputs.build_directory }}/doxygen/html

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
