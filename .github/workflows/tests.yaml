name: "Execute tests"

on:
  push:
    branches: ["master"]
    paths:
      - '**.c'
      - '**.cpp'
      - '**.h'
      - '**.hpp'
      - '**.cmake'
      - '**/CMakeLists.txt'
      - '.github/workflows/tests.yaml'
  pull_request:
    paths:
      - '**.c'
      - '**.cpp'
      - '**.h'
      - '**.hpp'
      - '**.cmake'
      - '**/CMakeLists.txt'
      - '.github/workflows/tests.yaml'

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix

    name: ${{matrix.architecture}}-${{matrix.configuration}}-${{matrix.toolchain}}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        architecture: [x64]
        configuration: [release]
        include:
          - os: ubuntu-latest
            toolchain: clang
          - os: ubuntu-latest
            toolchain: gnu
          - os: macos-latest
            toolchain: clang
          - os: windows-latest
            toolchain: clang-cl
          - os: windows-latest
            toolchain: msvc

    steps:
    - uses: actions/checkout@v3

    - uses: actions/cache@v3
      with:
        path: "**/cpm_modules"
        key: ${{ github.workflow }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}

    - name: Build
      run: |
          cmake --preset ${{matrix.architecture}}-${{matrix.configuration}}-${{matrix.toolchain}} --target tests

    - name: Run tests
      working-directory: ${{github.workspace}}
      run: ctest -C ${{matrix.configuration}}
